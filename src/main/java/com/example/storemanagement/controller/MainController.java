package com.example.storemanagement.controller;

/*
 * MainController.java ‚Äì Controller cho main.fxml
 *
 * Nhi·ªám v·ª• ch√≠nh:
 * 1) ƒêi·ªÅu h∆∞·ªõng gi·ªØa c√°c m√†n h√¨nh: Customers, Inventory, Finance.
 * 2) N·∫°p FXML con v√†o v√πng contentArea (StackPane) ·ªü gi·ªØa.
 * 3) Hi·ªÉn th·ªã tr·∫°ng th√°i (DB URL, user) ·ªü thanh status (statusLabel).
 * 4) X·ª≠ l√Ω c√°c action c∆° b·∫£n: About, Exit.
 *
 * Ph·ª• thu·ªôc t·ªëi thi·ªÉu:
 * - Ch·ªâ JavaFX + l·ªõp Main (ƒë·ªÉ ƒë·ªçc c·∫•u h√¨nh DB). Kh√¥ng ph·ª• thu·ªôc DAO/Service
 *   n√™n c√≥ th·ªÉ ch·∫°y ngay khi ch∆∞a t·∫°o xong backend.
 *
 * ƒê∆∞·ªùng d·∫´n t√†i nguy√™n (resource path):
 * - "/fxml/customers.fxml"
 * - "/fxml/inventory.fxml"
 * - "/fxml/finance.fxml"
 *
 * G·ª£i √Ω sau n√†y:
 * - C√≥ th·ªÉ t·∫°o l·ªõp NavigationService ƒë·ªÉ t√°ch vi·ªác n·∫°p view.
 * - C√≥ th·ªÉ th√™m Breadcrumb, ho·∫∑c TabPane n·∫øu mu·ªën nhi·ªÅu tab.
 */

import java.io.IOException;
import java.net.URL;
import java.util.Properties;

import com.example.storemanagement.Main;

import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Node;
import javafx.scene.Parent;
import javafx.scene.control.Alert;
import javafx.scene.control.Label;
import javafx.scene.layout.StackPane;

public class MainController {

    // Li√™n k·∫øt c√°c node trong main.fxml qua fx:id
    @FXML private StackPane contentArea;   // v√πng hi·ªÉn th·ªã m√†n h√¨nh con
    @FXML private Label statusLabel;       // hi·ªÉn th·ªã th√¥ng tin tr·∫°ng th√°i (DB,...)

    /**
     * H√†m n√†y t·ª± ƒë·ªông ch·∫°y sau khi FXMLLoader n·∫°p xong FXML.
     * D√πng ƒë·ªÉ kh·ªüi t·∫°o giao di·ªán m·∫∑c ƒë·ªãnh (m√†n h√¨nh ch√†o + status DB).
     */
    @FXML
    public void initialize() {
        // C·∫≠p nh·∫≠t status DB (ƒë·ªçc t·ª´ Main.getDbProps())
        updateStatusBar();
        // Hi·ªÉn th·ªã m√†n h√¨nh ch√†o m·ª´ng m·∫∑c ƒë·ªãnh
        showWelcome();
    }

    /**
     * M·ªü m√†n h√¨nh Qu·∫£n l√Ω Kh√°ch h√†ng.
     */
    @FXML
    public void openCustomers(ActionEvent event) {
        loadContent("/fxml/customers.fxml", "Customers");
    }

    /**
     * M·ªü m√†n h√¨nh Qu·∫£n l√Ω Kho h√†ng.
     */
    @FXML
    public void openInventory(ActionEvent event) {
        loadContent("/fxml/inventory.fxml", "Inventory");
    }

    /**
     * M·ªü m√†n h√¨nh Qu·∫£n l√Ω T√†i ch√≠nh.
     */
    @FXML
    public void openFinance(ActionEvent event) {
        loadContent("/fxml/finance.fxml", "Finance");
    }

    /**
     * Hi·ªÉn th·ªã h·ªôp tho·∫°i gi·ªõi thi·ªáu.
     */
    @FXML
    public void openAbout(ActionEvent event) {
        String content = "Store Management System\n" +
                "Phi√™n b·∫£n: 0.1 (Core, ch∆∞a c√≥ login)\n" +
                "T√°c gi·∫£: Ph·∫°m Ng·ªçc H∆∞ng ‚Äì MSSV: 20235342";
        showAlert(Alert.AlertType.INFORMATION, "About", content);
    }

    /**
     * Tho√°t ·ª©ng d·ª•ng m·ªôt c√°ch an to√†n.
     */
    @FXML
    public void exitApp(ActionEvent event) {
        // T·∫Øt to√†n b·ªô JavaFX Application Thread
        javafx.application.Platform.exit();
    }

    // ================== Helpers ==================

    /**
     * Hi·ªÉn th·ªã m·ªôt m√†n h√¨nh ch√†o ƒë∆°n gi·∫£n khi kh·ªüi ƒë·ªông.
     * Kh√¥ng ph·ª• thu·ªôc FXML con ƒë·ªÉ tr√°nh l·ªói n·∫øu ch∆∞a t·∫°o customers.fxml, ...
     */
    private void showWelcome() {
        Label welcome = new Label("üëã Welcome!\nH√£y d√πng menu ho·∫∑c n√∫t b√™n tr√°i ƒë·ªÉ chuy·ªÉn m√†n h√¨nh.\n" +
                "Module hi·ªán c√≥: Customers, Inventory, Finance.\n" +
                "(C√≥ th·ªÉ th√™m Login/Menu kh√°c trong t∆∞∆°ng lai)");
        welcome.setWrapText(true);
        welcome.setStyle("-fx-font-size: 14px; -fx-padding: 24;");

        setContent(welcome);
    }

    /**
     * T·∫£i FXML con v√† hi·ªÉn th·ªã v√†o contentArea. N·∫øu c√≥ l·ªói, b√°o Alert d·ªÖ hi·ªÉu.
     * @param fxmlPath  ƒë∆∞·ªùng d·∫´n trong classpath (v√≠ d·ª•: /fxml/customers.fxml)
     * @param title     t√™n hi·ªÉn th·ªã (kh√¥ng b·∫Øt bu·ªôc, d√πng cho th√¥ng ƒëi·ªáp)
     */
    private void loadContent(String fxmlPath, String title) {
        try {
            URL fxml = getClass().getResource(fxmlPath);
            if (fxml == null) {
                throw new IllegalStateException("Kh√¥ng t√¨m th·∫•y " + fxmlPath + " trong resources.");
            }
            Parent view = FXMLLoader.load(fxml);
            setContent(view);
            setStatusText("Opened: " + title);
        } catch (IOException | IllegalStateException ex) {
            showAlert(Alert.AlertType.ERROR, "Load View Failed",
                    "Kh√¥ng th·ªÉ n·∫°p m√†n h√¨nh: " + title + "\n" + ex.getMessage());
        }
    }

    /**
     * Thay th·∫ø n·ªôi dung ·ªü contentArea b·∫±ng node m·ªõi.
     */
    private void setContent(Node node) {
        contentArea.getChildren().setAll(node);
    }

    /**
     * C·∫≠p nh·∫≠t thanh tr·∫°ng th√°i d·ª±a tr√™n c·∫•u h√¨nh DB ƒëang d√πng.
     */
    private void updateStatusBar() {
        Properties p = Main.getDbProps();
        String url = p != null ? p.getProperty("url", "jdbc:mysql://localhost:3306/store_management") : "(unknown)";
        String user = p != null ? p.getProperty("user", "root") : "(unknown)";
        setStatusText("DB: " + url + "  |  User: " + user);
    }

    /**
     * ƒê·∫∑t n·ªôi dung text cho statusLabel (null-safe).
     */
    private void setStatusText(String text) {
        if (statusLabel != null) {
            statusLabel.setText(text);
        }
    }

    /** Hi·ªÉn th·ªã Alert ti·ªán l·ª£i */
    private void showAlert(Alert.AlertType type, String title, String content) {
        Alert a = new Alert(type);
        a.setTitle(title);
        a.setHeaderText(null);
        a.setContentText(content);
        a.show();
    }
}
